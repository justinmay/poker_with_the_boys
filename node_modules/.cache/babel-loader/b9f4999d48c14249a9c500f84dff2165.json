{"ast":null,"code":"var _jsxFileName = \"/Users/justinmay/Code/poker_with_the_boys/poker/src/components/Action.tsx\";\nimport React, { useState } from \"react\";\nimport '../stylesheets/Action.css';\nimport { useMutation } from '@apollo/react-hooks';\nimport { betMutation } from '../queries';\n\n/**\n * This funciton returns the action bar: TODO move the bet component to it's own component so it doesn't refresh the whole bar \n * @param Props props for Action bar\n */\nexport function Action(props) {\n  const [betAmount, setBetAmount] = useState(\"0\");\n  const [bet, {\n    loading: betLoading,\n    error: betError\n  }] = useMutation(betMutation);\n\n  function handleChange(event) {\n    let bet = event.target.value;\n\n    if (bet.match(/^-{0,1}\\d+$/)) {\n      setBetAmount(bet);\n    } else if (bet === \"\") {\n      setBetAmount(bet);\n    }\n  }\n\n  function betThisAmount(amount) {\n    const values = {\n      variables: {\n        gameId: props.gameId,\n        amount: amount\n      }\n    };\n    bet(values);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actionRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"actionButton greenBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Check\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"actionButton long blueBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Call\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"actionButton redBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Fold\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"actionButton yellowBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Bet 1/2\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"actionButton yellowBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Bet 3/4\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"actionButton yellowBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Bet Pot\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"actionButton yellowBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Rip It\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"actionButton yellowBack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Bet\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"actionButton long\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input yellowBack\",\n    type: \"text\",\n    name: \"name\",\n    value: betAmount,\n    onChange: event => handleChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })));\n}\nexport default Action;","map":{"version":3,"sources":["/Users/justinmay/Code/poker_with_the_boys/poker/src/components/Action.tsx"],"names":["React","useState","useMutation","betMutation","Action","props","betAmount","setBetAmount","bet","loading","betLoading","error","betError","handleChange","event","target","value","match","betThisAmount","amount","values","variables","gameId"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\nimport '../stylesheets/Action.css';\nimport {useMutation} from '@apollo/react-hooks';\nimport {betMutation, foldMutaiton, allInMutation} from '../queries';\n\ntype ActionProps = {\n    gameId: string,\n    pot: number\n};\n\n/**\n * This funciton returns the action bar: TODO move the bet component to it's own component so it doesn't refresh the whole bar \n * @param Props props for Action bar\n */\nexport function Action(props: ActionProps) {\n    const [betAmount, setBetAmount] = useState(\"0\");\n    const [bet, {loading: betLoading, error: betError}] = useMutation(betMutation);\n    function handleChange(event: ChangeEvent<HTMLInputElement>) {\n        let bet = event.target.value;\n        if (bet.match(/^-{0,1}\\d+$/)) {\n            setBetAmount(bet);\n        } else if (bet === \"\") {\n            setBetAmount(bet);\n        }\n        \n    }\n    \n    function betThisAmount(amount: number) {\n        const values = { variables: { gameId: props.gameId, amount: amount} }\n        bet(values);\n    }\n\n    return (\n        <div className=\"actionRow\">\n            <button className=\"actionButton greenBack\">\n                <p>\n                    Check\n                </p>\n            </button>\n            <button className=\"actionButton long blueBack\">\n                <p>\n                    Call\n                </p>\n            </button>\n            <button className=\"actionButton redBack\">\n                <p>\n                    Fold\n                </p>\n            </button>\n            <button className=\"actionButton yellowBack\">\n                <p>\n                    Bet 1/2\n                </p>\n            </button>\n            <button className=\"actionButton yellowBack\">\n                <p>\n                    Bet 3/4\n                </p>\n            </button>\n            <button className=\"actionButton yellowBack\">\n                <p>\n                    Bet Pot\n                </p>\n            </button>\n            <button className=\"actionButton yellowBack\">\n                <p>\n                    Rip It\n                </p>\n            </button>\n            <button className=\"actionButton yellowBack\">\n                <p>\n                    Bet\n                </p>\n            </button>\n            <form className=\"actionButton long\">\n                    <input \n                    className=\"input yellowBack\"\n                    type=\"text\" \n                    name=\"name\" \n                    value={betAmount} \n                    onChange={(event: ChangeEvent<HTMLInputElement>) => handleChange(event)}/>\n            </form>\n        </div>\n    )\n}\n\nexport default Action"]},"metadata":{},"sourceType":"module"}