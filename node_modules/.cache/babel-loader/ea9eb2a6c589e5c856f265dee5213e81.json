{"ast":null,"code":"var _jsxFileName = \"/Users/justinmay/Code/poker_with_the_boys/poker/src/components/GameStartOverlay.tsx\";\nimport React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { createGameMutation, joinGameQuery } from '../queries';\nimport '../stylesheets/GameStartOverlay.css';\nimport Settings from '../settings';\nexport default function GameStartOverlay(Props) {\n  const [startGameWorkflow, setStartGameWorkflow] = useState(false);\n  const [bigBlind, setBigBlind] = useState(0);\n  const [smallBlind, setSmallBlind] = useState(0);\n  const [gameId, setGameId] = useState(\"\");\n  const [createGame, {\n    loading: createGameLoading,\n    error: createGameError\n  }] = useMutation(createGameMutation);\n  const [joinGame, {\n    loading: joinGameLoading,\n    error: joinGameError\n  }] = useMutation(joinGameQuery);\n\n  function startNewGame() {\n    if (Settings.dev) {\n      Props.dismissOverlay();\n      return;\n    }\n\n    if (startGameWorkflow) {\n      const values = {\n        variables: {\n          BB: bigBlind,\n          SB: smallBlind\n        }\n      };\n      console.log(bigBlind, smallBlind);\n      createGame(values).then(e => {\n        console.log(e.data.createGame);\n        Props.parentGetGameID(e.data.createGame);\n        Props.dismissOverlay();\n      }).catch(e => {\n        console.log(e.toString());\n      });\n    } else {\n      setStartGameWorkflow(true);\n    }\n  }\n\n  function startGameWithID() {\n    if (Settings.dev) {\n      Props.dismissOverlay();\n      return;\n    }\n\n    const values = {\n      variables: {\n        gameId\n      }\n    };\n    joinGame(values).then(e => {\n      console.log(e);\n\n      if (e.data.joinGame) {\n        Props.parentGetGameID(gameId);\n        Props.dismissOverlay();\n      } else {\n        console.log(\"wrong gameid\"); //TODO PUT IN USER RESPONSE\n      }\n    }).catch(error => {\n      console.log(\"join game error\");\n      console.log(error);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    startGameWithID();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginContent lessOpacity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, createGameLoading ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 38\n    }\n  }, \" Hang Tight, Creating Game...\") : null, joinGameLoading ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 36\n    }\n  }, \" Hang Tight, Joining Game...\") : null, createGameError ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 36\n    }\n  }, \" \", createGameError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Can't create game\", \" \") : null, joinGameError ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 34\n    }\n  }, \" \", joinGameError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Wrong Game ID\", \" \") : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginButton overlayButton\",\n    onClick: () => startNewGame(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"New Game\"), startGameWorkflow ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      startNewGame();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput overlayInput\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"off\",\n    value: bigBlind,\n    placeholder: \"big blind size\",\n    onChange: event => setBigBlind(parseInt(event.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      startNewGame();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput overlayInput\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"off\",\n    value: smallBlind,\n    placeholder: \"small blind size\",\n    onChange: event => setSmallBlind(parseInt(event.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginButton overlayButton\",\n    onClick: () => startGameWithID(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Join Game\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput overlayInput\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"off\",\n    value: gameId,\n    placeholder: \"game id\",\n    onChange: event => setGameId(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/justinmay/Code/poker_with_the_boys/poker/src/components/GameStartOverlay.tsx"],"names":["React","useState","useMutation","createGameMutation","joinGameQuery","Settings","GameStartOverlay","Props","startGameWorkflow","setStartGameWorkflow","bigBlind","setBigBlind","smallBlind","setSmallBlind","gameId","setGameId","createGame","loading","createGameLoading","error","createGameError","joinGame","joinGameLoading","joinGameError","startNewGame","dev","dismissOverlay","values","variables","BB","SB","console","log","then","e","data","parentGetGameID","catch","toString","startGameWithID","handleSubmit","preventDefault","event","parseInt","target","value"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\nimport { useMutation} from '@apollo/react-hooks';\nimport {createGameMutation, joinGameQuery} from '../queries';\nimport '../stylesheets/GameStartOverlay.css';\nimport Settings from '../settings';\n\ntype GameStartProps = {\n    dismissOverlay: any,\n    parentGetGameID: any,\n};\n\nexport default function GameStartOverlay(Props: GameStartProps) {\n    const [startGameWorkflow, setStartGameWorkflow] = useState(false);\n    const [bigBlind, setBigBlind] = useState(0);\n    const [smallBlind, setSmallBlind] = useState(0);\n    const [gameId, setGameId] = useState(\"\");\n    const [createGame, { loading: createGameLoading, error: createGameError }] = useMutation(createGameMutation);\n    const [joinGame, { loading: joinGameLoading, error: joinGameError }] = useMutation(joinGameQuery);\n\n    function startNewGame() {\n        if (Settings.dev) {\n            Props.dismissOverlay();\n            return;\n        }\n        if (startGameWorkflow) {\n            const values = { variables: { BB: bigBlind, SB: smallBlind} };\n            console.log(bigBlind,smallBlind);\n            createGame(values).then(e => {\n                console.log(e.data.createGame);\n                Props.parentGetGameID(e.data.createGame);\n                Props.dismissOverlay();\n            }).catch(e => {\n                console.log(e.toString());\n            });\n        } else {\n            setStartGameWorkflow(true);\n        }\n    }\n\n    function startGameWithID() {\n        if (Settings.dev) {\n            Props.dismissOverlay();\n            return;\n        }\n        const values = { variables: { gameId} };\n        joinGame(values).then(e => {\n            console.log(e);\n            if(e.data.joinGame) {\n                Props.parentGetGameID(gameId);\n                Props.dismissOverlay()\n            } else {\n                console.log(\"wrong gameid\") //TODO PUT IN USER RESPONSE\n            }\n        }).catch(error => {\n            console.log(\"join game error\");\n            console.log(error);\n        })\n        \n    }\n\n    function handleSubmit(e: any) {\n        e.preventDefault();\n        startGameWithID();\n    }\n    \n    return (\n        <div className=\"overlay\">\n            <div className=\"loginContent lessOpacity\">\n                {createGameLoading ? <h2 className=\"loginInvalidUsername\"> Hang Tight, Creating Game...</h2>: null}\n                {joinGameLoading ? <h2 className=\"loginInvalidUsername\"> Hang Tight, Joining Game...</h2>: null}\n                {createGameError ? <h2 className=\"loginInvalidUsername\"> {createGameError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Can't create game\"} </h2> : null}\n                {joinGameError ? <h2 className=\"loginInvalidUsername\"> {joinGameError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Wrong Game ID\"} </h2> : null}\n                <button className=\"loginButton overlayButton\" onClick={() => startNewGame()}>\n                    New Game\n                </button>\n                \n                {\n                    startGameWorkflow ? \n                    <div>\n                        \n                        <form onSubmit={event => {event.preventDefault();startNewGame();}}>\n                            <input \n                            className=\"loginInput overlayInput\"\n                            type=\"text\" \n                            name=\"name\" \n                            autoComplete={\"off\"}\n                            value={bigBlind} \n                            placeholder={\"big blind size\"}\n                            onChange={(event: ChangeEvent<HTMLInputElement>) => setBigBlind(parseInt(event.target.value))}/>\n                        </form>\n                        <form onSubmit={event => {event.preventDefault();startNewGame();}}>\n                            <input \n                            className=\"loginInput overlayInput\"\n                            type=\"text\" \n                            name=\"name\" \n                            autoComplete={\"off\"}\n                            value={smallBlind} \n                            placeholder={\"small blind size\"}\n                            onChange={(event: ChangeEvent<HTMLInputElement>) => setSmallBlind(parseInt(event.target.value))}/>\n                        </form>\n                    </div> :\n                    <div>\n                        <button className=\"loginButton overlayButton\" onClick={() => startGameWithID()}>\n                        Join Game\n                        </button>\n                        <form onSubmit={event => handleSubmit(event)}>\n                            <input \n                            className=\"loginInput overlayInput\"\n                            type=\"text\" \n                            name=\"name\" \n                            autoComplete={\"off\"}\n                            value={gameId} \n                            placeholder={\"game id\"}\n                            onChange={(event: ChangeEvent<HTMLInputElement>) => setGameId(event.target.value)}/>\n                        </form>\n                    </div>\n                }\n                \n                \n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}