{"ast":null,"code":"var _jsxFileName = \"/Users/justinmay/Code/poker_with_the_boys/poker/src/components/GameStart.tsx\";\nimport React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { createGameMutation, joinGameQuery } from '../queries';\nimport '../stylesheets/GameStart.css';\nimport Settings from '../settings';\nimport { Redirect, useLocation } from \"react-router-dom\";\nexport default function GameStart(Props) {\n  const [startGameWorkflow, setStartGameWorkflow] = useState(false);\n  const location = useLocation();\n  const [bigBlind, setBigBlind] = useState(\"\");\n  const [smallBlind, setSmallBlind] = useState(\"\");\n  const [notValidBlinds, setNotValidBlinds] = useState(false);\n  const [gameId, setGameId] = useState(\"\");\n  const [createGame, {\n    loading: createGameLoading,\n    error: createGameError\n  }] = useMutation(createGameMutation);\n  const [joinGame, {\n    loading: joinGameLoading,\n    error: joinGameError\n  }] = useMutation(joinGameQuery);\n  const [startGame, setStartGame] = useState(false);\n  let gameData = undefined;\n\n  function startNewGame() {\n    if (Settings.dev) {\n      setStartGame(true);\n      return;\n    }\n\n    if (startGameWorkflow) {\n      if (+bigBlind === 0 || +smallBlind === 0) {\n        setNotValidBlinds(true);\n        return;\n      } else {\n        setNotValidBlinds(false);\n      }\n\n      const values = {\n        variables: {\n          BB: +bigBlind,\n          SB: +smallBlind\n        }\n      };\n      createGame(values).then(e => {\n        console.log(e.data.createGame);\n        setGameId(e.data.createGame);\n        setStartGame(true);\n      }).catch(e => {\n        console.log(e.toString());\n      });\n    } else {\n      setStartGameWorkflow(true);\n    }\n  }\n\n  function startGameWithID() {\n    if (Settings.dev) {\n      setStartGame(true);\n      return;\n    }\n\n    const values = {\n      variables: {\n        gameId\n      }\n    };\n    joinGame(values).then(e => {\n      console.log(\"join game\", e);\n\n      if (e.data.joinGame) {\n        gameData = e.data.joinGame;\n        setStartGame(true);\n      } else {\n        console.log(\"wrong gameid\"); //TODO PUT IN USER RESPONSE\n      }\n    }).catch(error => {\n      console.log(\"join game error\");\n      console.log(error);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    startGameWithID();\n  }\n\n  function handleBBChange(e) {\n    const input = +e.target.value;\n\n    if (input) {\n      setBigBlind(e.target.value);\n    }\n  }\n\n  function handleSBChange(e) {\n    const input = +e.target.value;\n\n    if (input) {\n      setSmallBlind(e.target.value);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, startGame && /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/poker',\n      state: {\n        gameId: gameId,\n        gameData,\n        username: location.state.username,\n        venmo: location.state.venmo\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 30\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginContent lessOpacity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, createGameLoading && /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 39\n    }\n  }, \" Hang Tight, Creating Game...\"), joinGameLoading && /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, \" Hang Tight, Joining Game...\"), notValidBlinds && /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 36\n    }\n  }, \" Invalid Blind Size\"), createGameError ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 36\n    }\n  }, \" \", createGameError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Can't create game\", \" \") : null, joinGameError ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 34\n    }\n  }, \" \", joinGameError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Wrong Game ID\", \" \") : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginButton overlayButton\",\n    onClick: () => startNewGame(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"New Game\"), startGameWorkflow ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      startNewGame();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput overlayInput\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"off\",\n    value: bigBlind,\n    placeholder: \"big blind size\",\n    onChange: event => handleBBChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      startNewGame();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput overlayInput\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"off\",\n    value: smallBlind,\n    placeholder: \"small blind size\",\n    onChange: event => handleSBChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginButton overlayButton\",\n    onClick: () => setStartGameWorkflow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, \"Back\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginButton overlayButton\",\n    onClick: () => startGameWithID(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, \"Join Game\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput overlayInput\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"off\",\n    value: gameId,\n    placeholder: \"game id\",\n    onChange: event => setGameId(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/justinmay/Code/poker_with_the_boys/poker/src/components/GameStart.tsx"],"names":["React","useState","useMutation","createGameMutation","joinGameQuery","Settings","Redirect","useLocation","GameStart","Props","startGameWorkflow","setStartGameWorkflow","location","bigBlind","setBigBlind","smallBlind","setSmallBlind","notValidBlinds","setNotValidBlinds","gameId","setGameId","createGame","loading","createGameLoading","error","createGameError","joinGame","joinGameLoading","joinGameError","startGame","setStartGame","gameData","undefined","startNewGame","dev","values","variables","BB","SB","then","e","console","log","data","catch","toString","startGameWithID","handleSubmit","preventDefault","handleBBChange","input","target","value","handleSBChange","pathname","state","username","venmo","event"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA2B,qBAA3B;AACA,SAAQC,kBAAR,EAA4BC,aAA5B,QAAgD,YAAhD;AACA,OAAO,8BAAP;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,kBAApC;AAKA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0C;AACrD,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAMW,QAAa,GAAGL,WAAW,EAAjC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoB,UAAD,EAAa;AAAEC,IAAAA,OAAO,EAAEC,iBAAX;AAA8BC,IAAAA,KAAK,EAAEC;AAArC,GAAb,IAAuEvB,WAAW,CAACC,kBAAD,CAAxF;AACA,QAAM,CAACuB,QAAD,EAAW;AAAEJ,IAAAA,OAAO,EAAEK,eAAX;AAA4BH,IAAAA,KAAK,EAAEI;AAAnC,GAAX,IAAiE1B,WAAW,CAACE,aAAD,CAAlF;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B7B,QAAQ,CAAC,KAAD,CAA1C;AACA,MAAI8B,QAAQ,GAAGC,SAAf;;AAEA,WAASC,YAAT,GAAwB;AACpB,QAAI5B,QAAQ,CAAC6B,GAAb,EAAkB;AACdJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACH;;AACD,QAAIpB,iBAAJ,EAAuB;AACnB,UAAI,CAACG,QAAD,KAAc,CAAd,IAAmB,CAACE,UAAD,KAAgB,CAAvC,EAA0C;AACtCG,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA;AACH,OAHD,MAGO;AACHA,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH;;AACD,YAAMiB,MAAM,GAAG;AAAEC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,EAAE,EAAE,CAACxB,QAAP;AAAiByB,UAAAA,EAAE,EAAE,CAACvB;AAAtB;AAAb,OAAf;AACAM,MAAAA,UAAU,CAACc,MAAD,CAAV,CAAmBI,IAAnB,CAAwBC,CAAC,IAAI;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,IAAF,CAAOtB,UAAnB;AACAD,QAAAA,SAAS,CAACoB,CAAC,CAACG,IAAF,CAAOtB,UAAR,CAAT;AACAS,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,OAJD,EAIGc,KAJH,CAISJ,CAAC,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACK,QAAF,EAAZ;AACH,OAND;AAOH,KAfD,MAeO;AACHlC,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH;AACJ;;AAED,WAASmC,eAAT,GAA2B;AACvB,QAAIzC,QAAQ,CAAC6B,GAAb,EAAkB;AACdJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACH;;AACD,UAAMK,MAAM,GAAG;AAAEC,MAAAA,SAAS,EAAE;AAAEjB,QAAAA;AAAF;AAAb,KAAf;AACAO,IAAAA,QAAQ,CAACS,MAAD,CAAR,CAAiBI,IAAjB,CAAsBC,CAAC,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,CAAzB;;AACA,UAAGA,CAAC,CAACG,IAAF,CAAOjB,QAAV,EAAoB;AAChBK,QAAAA,QAAQ,GAAGS,CAAC,CAACG,IAAF,CAAOjB,QAAlB;AACAI,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,OAHD,MAGO;AACHW,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EADG,CACyB;AAC/B;AACJ,KARD,EAQGE,KARH,CAQSpB,KAAK,IAAI;AACdiB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACH,KAXD;AAaH;;AAED,WAASuB,YAAT,CAAsBP,CAAtB,EAA8B;AAC1BA,IAAAA,CAAC,CAACQ,cAAF;AACAF,IAAAA,eAAe;AAClB;;AAED,WAASG,cAAT,CAAwBT,CAAxB,EAA0D;AACtD,UAAMU,KAAK,GAAG,CAACV,CAAC,CAACW,MAAF,CAASC,KAAxB;;AACA,QAAGF,KAAH,EAAU;AACNpC,MAAAA,WAAW,CAAC0B,CAAC,CAACW,MAAF,CAASC,KAAV,CAAX;AACH;AACJ;;AAED,WAASC,cAAT,CAAwBb,CAAxB,EAA0D;AACtD,UAAMU,KAAK,GAAG,CAACV,CAAC,CAACW,MAAF,CAASC,KAAxB;;AACA,QAAGF,KAAH,EAAU;AACNlC,MAAAA,aAAa,CAACwB,CAAC,CAACW,MAAF,CAASC,KAAV,CAAb;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQvB,SAAS,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAACyB,MAAAA,QAAQ,EAAE,QAAX;AAAqBC,MAAAA,KAAK,EAAC;AAACpC,QAAAA,MAAM,EAAEA,MAAT;AAAiBY,QAAAA,QAAjB;AAA2ByB,QAAAA,QAAQ,EAAE5C,QAAQ,CAAC2C,KAAT,CAAeC,QAApD;AAA8DC,QAAAA,KAAK,EAAE7C,QAAQ,CAAC2C,KAAT,CAAeE;AAApF;AAA3B,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrB,eAII;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlC,iBAAiB,iBAAI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAD1B,EAEKI,eAAe,iBAAI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFxB,EAGKV,cAAc,iBAAI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHvB,EAIKQ,eAAe,gBAAG;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuCA,eAAe,CAACoB,QAAhB,OAA+B,uCAA/B,GAAyE,yBAAzE,GAAqG,mBAA5I,MAAH,GAA4K,IAJhM,EAKKjB,aAAa,gBAAG;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuCA,aAAa,CAACiB,QAAd,OAA6B,uCAA7B,GAAuE,yBAAvE,GAAmG,eAA1I,MAAH,GAAsK,IALxL,eAMI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAE,MAAMZ,YAAY,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAWQvB,iBAAiB,gBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAM,IAAA,QAAQ,EAAEgD,KAAK,IAAI;AAACA,MAAAA,KAAK,CAACV,cAAN;AAAuBf,MAAAA,YAAY;AAAI,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAC,yBADV;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,YAAY,EAAE,KAJd;AAKA,IAAA,KAAK,EAAEpB,QALP;AAMA,IAAA,WAAW,EAAE,gBANb;AAOA,IAAA,QAAQ,EAAG6C,KAAD,IAA0CT,cAAc,CAACS,KAAD,CAPlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAYI;AAAM,IAAA,QAAQ,EAAEA,KAAK,IAAI;AAACA,MAAAA,KAAK,CAACV,cAAN;AAAuBf,MAAAA,YAAY;AAAI,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAC,yBADV;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,YAAY,EAAE,KAJd;AAKA,IAAA,KAAK,EAAElB,UALP;AAMA,IAAA,WAAW,EAAE,kBANb;AAOA,IAAA,QAAQ,EAAG2C,KAAD,IAA0CL,cAAc,CAACK,KAAD,CAPlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,eAsBI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAE,MAAM/C,oBAAoB,CAAC,KAAD,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,CADiB,gBA2BjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAA8C,IAAA,OAAO,EAAE,MAAMmC,eAAe,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAII;AAAM,IAAA,QAAQ,EAAEY,KAAK,IAAIX,YAAY,CAACW,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,SAAS,EAAC,yBADV;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,YAAY,EAAE,KAJd;AAKA,IAAA,KAAK,EAAEvC,MALP;AAMA,IAAA,WAAW,EAAE,SANb;AAOA,IAAA,QAAQ,EAAGuC,KAAD,IAA0CtC,SAAS,CAACsC,KAAK,CAACP,MAAN,CAAaC,KAAd,CAP7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAtCR,CAJJ,CADJ;AAgEH","sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\nimport { useMutation} from '@apollo/react-hooks';\nimport {createGameMutation, joinGameQuery} from '../queries';\nimport '../stylesheets/GameStart.css';\nimport Settings from '../settings';\nimport {Redirect, useLocation} from \"react-router-dom\";\n\ntype GameStartProps = {\n};\n\nexport default function GameStart(Props: GameStartProps) {\n    const [startGameWorkflow, setStartGameWorkflow] = useState(false);\n    const location: any = useLocation();\n    const [bigBlind, setBigBlind] = useState(\"\");\n    const [smallBlind, setSmallBlind] = useState(\"\");\n    const [notValidBlinds, setNotValidBlinds] = useState(false);\n    const [gameId, setGameId] = useState(\"\");\n    const [createGame, { loading: createGameLoading, error: createGameError }] = useMutation(createGameMutation);\n    const [joinGame, { loading: joinGameLoading, error: joinGameError }] = useMutation(joinGameQuery);\n    const [startGame, setStartGame] = useState(false);\n    let gameData = undefined;\n\n    function startNewGame() {\n        if (Settings.dev) {\n            setStartGame(true);\n            return;\n        }\n        if (startGameWorkflow) {\n            if (+bigBlind === 0 || +smallBlind === 0) {\n                setNotValidBlinds(true);\n                return;\n            } else {\n                setNotValidBlinds(false);\n            }\n            const values = { variables: { BB: +bigBlind, SB: +smallBlind} };\n            createGame(values).then(e => {\n                console.log(e.data.createGame);\n                setGameId(e.data.createGame);\n                setStartGame(true);\n            }).catch(e => {\n                console.log(e.toString());\n            });\n        } else {\n            setStartGameWorkflow(true);\n        }\n    }\n\n    function startGameWithID() {\n        if (Settings.dev) {\n            setStartGame(true);\n            return;\n        }\n        const values = { variables: { gameId} };\n        joinGame(values).then(e => {\n            console.log(\"join game\", e);\n            if(e.data.joinGame) {\n                gameData = e.data.joinGame\n                setStartGame(true);\n            } else {\n                console.log(\"wrong gameid\") //TODO PUT IN USER RESPONSE\n            }\n        }).catch(error => {\n            console.log(\"join game error\");\n            console.log(error);\n        })\n        \n    }\n\n    function handleSubmit(e: any) {\n        e.preventDefault();\n        startGameWithID();\n    }\n\n    function handleBBChange(e: ChangeEvent<HTMLInputElement>) {\n        const input = +e.target.value;\n        if(input) {\n            setBigBlind(e.target.value);\n        }\n    }\n\n    function handleSBChange(e: ChangeEvent<HTMLInputElement>) {\n        const input = +e.target.value;\n        if(input) {\n            setSmallBlind(e.target.value);\n        }\n    }\n    \n    return (\n        <div className=\"loginContainer\">\n            {\n                startGame && <Redirect to={{pathname: '/poker', state:{gameId: gameId, gameData, username: location.state.username, venmo: location.state.venmo}}}/> \n            }\n            <div className=\"loginContent lessOpacity\">\n                {createGameLoading && <h2 className=\"loginInvalidUsername\"> Hang Tight, Creating Game...</h2>}\n                {joinGameLoading && <h2 className=\"loginInvalidUsername\"> Hang Tight, Joining Game...</h2>}\n                {notValidBlinds && <h2 className=\"loginInvalidUsername\"> Invalid Blind Size</h2>}\n                {createGameError ? <h2 className=\"loginInvalidUsername\"> {createGameError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Can't create game\"} </h2> : null}\n                {joinGameError ? <h2 className=\"loginInvalidUsername\"> {joinGameError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Wrong Game ID\"} </h2> : null}\n                <button className=\"loginButton overlayButton\" onClick={() => startNewGame()}>\n                    New Game\n                </button>\n                \n                {\n                    startGameWorkflow ? \n                    <div>\n                        \n                        <form onSubmit={event => {event.preventDefault();startNewGame();}}>\n                            <input \n                            className=\"loginInput overlayInput\"\n                            type=\"text\" \n                            name=\"name\" \n                            autoComplete={\"off\"}\n                            value={bigBlind} \n                            placeholder={\"big blind size\"}\n                            onChange={(event: ChangeEvent<HTMLInputElement>) => handleBBChange(event)}/>\n                        </form>\n                        <form onSubmit={event => {event.preventDefault();startNewGame();}}>\n                            <input \n                            className=\"loginInput overlayInput\"\n                            type=\"text\" \n                            name=\"name\" \n                            autoComplete={\"off\"}\n                            value={smallBlind} \n                            placeholder={\"small blind size\"}\n                            onChange={(event: ChangeEvent<HTMLInputElement>) => handleSBChange(event)}/>\n                        </form>\n                        <button className=\"loginButton overlayButton\" onClick={() => setStartGameWorkflow(false)}>\n                            Back\n                        </button>\n                    </div> :\n                    <div>\n                        <button className=\"loginButton overlayButton\" onClick={() => startGameWithID()}>\n                        Join Game\n                        </button>\n                        <form onSubmit={event => handleSubmit(event)}>\n                            <input \n                            className=\"loginInput overlayInput\"\n                            type=\"text\" \n                            name=\"name\" \n                            autoComplete={\"off\"}\n                            value={gameId} \n                            placeholder={\"game id\"}\n                            onChange={(event: ChangeEvent<HTMLInputElement>) => setGameId(event.target.value)}/>\n                        </form>\n                    </div>\n                }\n                \n                \n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}