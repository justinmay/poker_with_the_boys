{"ast":null,"code":"var _jsxFileName = \"/Users/justinmay/Code/poker_with_the_boys/poker/src/components/Login.tsx\";\nimport React, { useState } from \"react\";\nimport '../stylesheets/Login.css';\nimport { Redirect } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { signUpQuery, signInQuery } from '../queries';\nimport Settings from '../settings';\nimport { AUTH_TOKEN } from '../constants';\nexport function Login(Props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showSignUpScreen, setShowSignUpScreen] = useState(false);\n  const [venmo, setVenmo] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // eslint-disable-next-line\n\n  const [signUp, {\n    loading: signUpLoading,\n    error: signUpError\n  }] = useMutation(signUpQuery); // eslint-disable-next-line\n\n  const [signIn, {\n    loading: signInLoading,\n    error: signInError\n  }] = useMutation(signInQuery, {\n    errorPolicy: 'all'\n  });\n\n  function login(e) {\n    e.preventDefault();\n\n    if (Settings.dev) {\n      setIsLoggedIn(true);\n    } else if (showSignUpScreen) {\n      handleSignUp(e);\n    } else {\n      const values = {\n        variables: {\n          username,\n          password\n        }\n      };\n      signIn(values).then(({\n        data\n      }) => {\n        //getting the token \n        _saveUserData(data.signIn.token);\n\n        setIsLoggedIn(true);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n\n  function _saveUserData(token) {\n    localStorage.setItem(AUTH_TOKEN, token);\n  }\n\n  function handleSignUp(e) {\n    //todo: TEST THIS\n    e.preventDefault();\n\n    if (showSignUpScreen) {\n      const values = {\n        variables: {\n          username,\n          password,\n          venmo\n        }\n      };\n      signUp(values).then(({\n        data\n      }) => {\n        // saving user token to local storage\n        console.log(data);\n\n        _saveUserData(data.signUp.token);\n\n        setIsLoggedIn(true);\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n\n    setShowSignUpScreen(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, isLoggedIn ? /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/poker'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"loginHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Poker With The Boys\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"loginSymbols\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"\\u2664 \\u2661 \\u2662 \\u2667\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => login(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, Settings.dev ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, \" Dev Mode - password Admin\") : null, signInLoading || signUpLoading ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 55\n    }\n  }, \" Loading...\") : null, signInError && !showSignUpScreen ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 57\n    }\n  }, \" \", signInError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Invalid Username or Password\", \" \") : null, signUpError && showSignUpScreen ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"loginInvalidUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 56\n    }\n  }, \" \", signUpError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Username already taken\", \" \") : null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput\",\n    type: \"text\",\n    name: \"name\",\n    value: username,\n    autoComplete: \"off\",\n    placeholder: \"username\",\n    onChange: event => setUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => login(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput\",\n    type: \"password\",\n    name: \"name\",\n    value: password,\n    placeholder: \"password\",\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), showSignUpScreen ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: event => login(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"loginInput\",\n    type: \"text\",\n    name: \"name\",\n    value: venmo,\n    autoComplete: \"off\",\n    placeholder: \"venmo handle\",\n    onChange: event => setVenmo(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginButtonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, showSignUpScreen ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginButton\",\n    onClick: () => {\n      setShowSignUpScreen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"Back\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginButton\",\n    onClick: event => login(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginButton\",\n    onClick: event => handleSignUp(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Sign Up\"))));\n}\nexport default Login;","map":{"version":3,"sources":["/Users/justinmay/Code/poker_with_the_boys/poker/src/components/Login.tsx"],"names":["React","useState","Redirect","useMutation","signUpQuery","signInQuery","Settings","AUTH_TOKEN","Login","Props","username","setUsername","password","setPassword","showSignUpScreen","setShowSignUpScreen","venmo","setVenmo","isLoggedIn","setIsLoggedIn","signUp","loading","signUpLoading","error","signUpError","signIn","signInLoading","signInError","errorPolicy","login","e","preventDefault","dev","handleSignUp","values","variables","then","data","_saveUserData","token","catch","console","log","localStorage","setItem","pathname","event","toString","target","value"],"mappings":"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","sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\nimport '../stylesheets/Login.css';\nimport {Redirect} from \"react-router-dom\";\nimport { useMutation} from '@apollo/react-hooks';\nimport {signUpQuery, signInQuery} from '../queries';\nimport Settings from '../settings';\nimport {AUTH_TOKEN} from '../constants';\n\ntype LoginAfterDataProps = {\n};\n\nexport function Login(Props: LoginAfterDataProps) { \n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [showSignUpScreen, setShowSignUpScreen] = useState(false);\n    const [venmo, setVenmo] = useState(\"\");\n    const [isLoggedIn, setIsLoggedIn] = useState(false);// eslint-disable-next-line\n    const [signUp, {  loading: signUpLoading, error: signUpError }] = useMutation(signUpQuery);// eslint-disable-next-line\n    const [signIn, { loading: signInLoading, error: signInError}] = useMutation(signInQuery, { errorPolicy: 'all' });\n\n    function login(e: any) {\n        e.preventDefault();\n        if(Settings.dev) {\n            setIsLoggedIn(true);\n        } else if(showSignUpScreen) {\n            handleSignUp(e)\n        } else {\n            const values = {variables: {username, password}};\n            signIn(values).then( ({data}) => {\n                //getting the token \n                _saveUserData(data.signIn.token);\n                setIsLoggedIn(true);\n            }).catch(e => {\n                console.log(e);\n              });\n        }\n    }\n\n    function _saveUserData(token: string) {\n        localStorage.setItem(AUTH_TOKEN, token);\n    }\n\n    function handleSignUp(e: any) { //todo: TEST THIS\n        e.preventDefault(); \n        if(showSignUpScreen) {\n            const values = { variables: { username, password, venmo } }\n            signUp(values).then(({data}) => {\n                // saving user token to local storage\n                console.log(data)\n                _saveUserData(data.signUp.token);\n                setIsLoggedIn(true);\n            }).catch(e => {\n                console.log(e);\n            });\n        }\n        setShowSignUpScreen(true);\n    }\n    \n\n    return (\n        <div className=\"loginContainer\">\n          {\n              isLoggedIn ? <Redirect to={{\n                pathname: '/poker'\n            }} /> :\n          \n            <div className=\"loginContent\">\n                <div>\n                    <h1 className=\"loginHeader\">Poker With The Boys</h1>\n                    <h1 className=\"loginSymbols\">♤ ♡ ♢ ♧</h1>\n                </div>\n\n                <form onSubmit={event=>login(event)}>\n                    {Settings.dev ? <h2 className=\"loginInvalidUsername\"> Dev Mode - password Admin</h2> : null}\n                    {signInLoading || signUpLoading ? <h2 className=\"loginInvalidUsername\"> Loading...</h2> : null}\n                    {signInError && !showSignUpScreen ? <h2 className=\"loginInvalidUsername\"> {signInError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Invalid Username or Password\"} </h2> : null}\n                    {signUpError && showSignUpScreen ? <h2 className=\"loginInvalidUsername\"> {signUpError.toString() === \"Error: Network error: Failed to fetch\" ? \"Can't connect to server\" : \"Username already taken\"} </h2> : null}\n                    <input \n                    className=\"loginInput\"\n                    type=\"text\" \n                    name=\"name\" \n                    value={username} \n                    autoComplete={\"off\"}\n                    placeholder={\"username\"}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => setUsername(event.target.value)}/>\n                </form>\n\n                <form onSubmit={event=>login(event)}>\n                    <input \n                    className=\"loginInput\"\n                    type=\"password\" \n                    name=\"name\" \n                    value={password} \n                    placeholder={\"password\"}\n                    onChange={(event: ChangeEvent<HTMLInputElement>) => setPassword(event.target.value)}/>\n                </form>\n                \n                {\n                    showSignUpScreen ?\n                    <form onSubmit={event=>login(event)}>\n                        <input \n                        className=\"loginInput\"\n                        type=\"text\" \n                        name=\"name\" \n                        value={venmo} \n                        autoComplete={\"off\"}\n                        placeholder={\"venmo handle\"}\n                        onChange={(event: ChangeEvent<HTMLInputElement>) => setVenmo(event.target.value)}/>\n                    </form>\n                    : null\n                }\n                <div className=\"loginButtonContainer\">\n                    {\n                        showSignUpScreen ? \n                        <button className=\"loginButton\" onClick={() => {setShowSignUpScreen(false);}}>\n                            Back\n                        </button> : \n                        <button className=\"loginButton\" onClick={event => login(event)}>\n                            Login\n                        </button>\n                    }\n                    <button className=\"loginButton\" onClick={event => handleSignUp(event)}>\n                        Sign Up\n                    </button>\n                </div>\n            </div>\n            }\n      </div>\n  )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}